plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    // runtimeOnly 'org.postgresql:postgresql' // Uncomment when you switch to Postgres
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Task to build the frontend
task buildFrontend(type: Exec) {
    workingDir '../frontend'
    commandLine 'cmd', '/c', 'npm install && npm run build'
}

// Task to run the backend only
task runBackend(type: Exec) {
    dependsOn bootRun
}

bootRun {
    group = "application"
    description = "Runs the backend application"
}

// Task to run the frontend only
task runFrontend(type: Exec) {
    workingDir '../frontend'
    commandLine 'cmd', '/c', 'npm start'
    group = "application"
    description = "Runs the frontend application"
}
